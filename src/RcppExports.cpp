// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// DDM_with_confidence_slow
NumericMatrix DDM_with_confidence_slow(double v, double a, double ter, double z, int ntrials, double s, double dt, double t2time, double postdriftmod);
RcppExport SEXP _myPackage_DDM_with_confidence_slow(SEXP vSEXP, SEXP aSEXP, SEXP terSEXP, SEXP zSEXP, SEXP ntrialsSEXP, SEXP sSEXP, SEXP dtSEXP, SEXP t2timeSEXP, SEXP postdriftmodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type v(vSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type ter(terSEXP);
    Rcpp::traits::input_parameter< double >::type z(zSEXP);
    Rcpp::traits::input_parameter< int >::type ntrials(ntrialsSEXP);
    Rcpp::traits::input_parameter< double >::type s(sSEXP);
    Rcpp::traits::input_parameter< double >::type dt(dtSEXP);
    Rcpp::traits::input_parameter< double >::type t2time(t2timeSEXP);
    Rcpp::traits::input_parameter< double >::type postdriftmod(postdriftmodSEXP);
    rcpp_result_gen = Rcpp::wrap(DDM_with_confidence_slow(v, a, ter, z, ntrials, s, dt, t2time, postdriftmod));
    return rcpp_result_gen;
END_RCPP
}
// DDM_with_confidence_slow_fullconfRT
NumericMatrix DDM_with_confidence_slow_fullconfRT(double v, double a, double ter, double z, int ntrials, double s, double dt, NumericVector t2distribution, double postdriftmod);
RcppExport SEXP _myPackage_DDM_with_confidence_slow_fullconfRT(SEXP vSEXP, SEXP aSEXP, SEXP terSEXP, SEXP zSEXP, SEXP ntrialsSEXP, SEXP sSEXP, SEXP dtSEXP, SEXP t2distributionSEXP, SEXP postdriftmodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type v(vSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type ter(terSEXP);
    Rcpp::traits::input_parameter< double >::type z(zSEXP);
    Rcpp::traits::input_parameter< int >::type ntrials(ntrialsSEXP);
    Rcpp::traits::input_parameter< double >::type s(sSEXP);
    Rcpp::traits::input_parameter< double >::type dt(dtSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type t2distribution(t2distributionSEXP);
    Rcpp::traits::input_parameter< double >::type postdriftmod(postdriftmodSEXP);
    rcpp_result_gen = Rcpp::wrap(DDM_with_confidence_slow_fullconfRT(v, a, ter, z, ntrials, s, dt, t2distribution, postdriftmod));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_myPackage_DDM_with_confidence_slow", (DL_FUNC) &_myPackage_DDM_with_confidence_slow, 9},
    {"_myPackage_DDM_with_confidence_slow_fullconfRT", (DL_FUNC) &_myPackage_DDM_with_confidence_slow_fullconfRT, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_myPackage(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
